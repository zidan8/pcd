/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gambar;

import javax.swing.JLabel;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Zidan
 */
public class GambarForm extends javax.swing.JFrame {

    
    private ImageIcon ii;
    private JLabel imageLabel;
    /**
     * Creates new form GambarForm
     */
    public ClassGambar gambar;
    public GambarForm() {
        initComponents();
        Slider_Brightness.addChangeListener(new SliderListener());
        isSliderUse(false);
        
    }

        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        Slider_Brightness = new javax.swing.JSlider();
        slider_rotate = new javax.swing.JSlider();
        miBrightness = new javax.swing.JToggleButton();
        miFreeRot = new javax.swing.JToggleButton();
        lbl_SlideNumber = new javax.swing.JLabel();
        lbl_derajat = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        miBuka = new javax.swing.JMenuItem();
        miSimpan = new javax.swing.JMenuItem();
        miKeluar = new javax.swing.JMenuItem();
        mnEdit = new javax.swing.JMenu();
        miGrayscale = new javax.swing.JMenuItem();
        miBiner = new javax.swing.JMenuItem();
        miDefault = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        miZin = new javax.swing.JMenuItem();
        miZout = new javax.swing.JMenuItem();
        miFlipv = new javax.swing.JMenuItem();
        miFliph = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mi30 = new javax.swing.JMenuItem();
        mi45 = new javax.swing.JMenuItem();
        mi90 = new javax.swing.JMenuItem();
        mi180 = new javax.swing.JMenuItem();
        mi270 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        miTranslasiHorizontal = new javax.swing.JMenuItem();
        miTranslasiVertikal = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PCD 1");

        jLabel2.setText(".");

        Slider_Brightness.setMaximum(255);
        Slider_Brightness.setMinimum(-255);
        Slider_Brightness.setPaintTicks(true);
        Slider_Brightness.setSnapToTicks(true);
        Slider_Brightness.setValue(0);

        slider_rotate.setMaximum(360);
        slider_rotate.setValue(0);
        slider_rotate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_rotateStateChanged(evt);
            }
        });

        miBrightness.setText("Brightness");
        miBrightness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBrightnessActionPerformed(evt);
            }
        });

        miFreeRot.setText("Rotate");
        miFreeRot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFreeRotActionPerformed(evt);
            }
        });

        lbl_SlideNumber.setText("0");

        lbl_derajat.setText("0°");

        mnFile.setText("File");

        miBuka.setText("Buka");
        miBuka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBukaActionPerformed(evt);
            }
        });
        mnFile.add(miBuka);

        miSimpan.setText("Simpan");
        miSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSimpanActionPerformed(evt);
            }
        });
        mnFile.add(miSimpan);

        miKeluar.setText("Keluar");
        miKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKeluarActionPerformed(evt);
            }
        });
        mnFile.add(miKeluar);

        jMenuBar1.add(mnFile);

        mnEdit.setText("Edit");

        miGrayscale.setText("Grayscale");
        miGrayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGrayscaleActionPerformed(evt);
            }
        });
        mnEdit.add(miGrayscale);

        miBiner.setText("Biner");
        miBiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBinerActionPerformed(evt);
            }
        });
        mnEdit.add(miBiner);

        miDefault.setText("Default");
        miDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDefaultActionPerformed(evt);
            }
        });
        mnEdit.add(miDefault);

        jMenuBar1.add(mnEdit);

        jMenu1.setText("Op. Geometri");

        miZin.setText("Zoom in");
        miZin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miZinActionPerformed(evt);
            }
        });
        jMenu1.add(miZin);

        miZout.setText("Zoom Out");
        miZout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miZoutActionPerformed(evt);
            }
        });
        jMenu1.add(miZout);

        miFlipv.setText("Flip Vertikal");
        miFlipv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFlipvActionPerformed(evt);
            }
        });
        jMenu1.add(miFlipv);

        miFliph.setText("Flip Horizontal");
        miFliph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFliphActionPerformed(evt);
            }
        });
        jMenu1.add(miFliph);

        jMenu2.setText("Rotate");

        mi30.setText("30°");
        mi30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi30ActionPerformed(evt);
            }
        });
        jMenu2.add(mi30);

        mi45.setText("45°");
        mi45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi45ActionPerformed(evt);
            }
        });
        jMenu2.add(mi45);

        mi90.setText("90°");
        mi90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi90ActionPerformed(evt);
            }
        });
        jMenu2.add(mi90);

        mi180.setText("180°");
        mi180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi180ActionPerformed(evt);
            }
        });
        jMenu2.add(mi180);

        mi270.setText("270°");
        mi270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi270ActionPerformed(evt);
            }
        });
        jMenu2.add(mi270);

        jMenu1.add(jMenu2);

        jMenu3.setText("Translasi");

        miTranslasiHorizontal.setText("Horizontal");
        miTranslasiHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTranslasiHorizontalActionPerformed(evt);
            }
        });
        jMenu3.add(miTranslasiHorizontal);

        miTranslasiVertikal.setText("Vertikal");
        miTranslasiVertikal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTranslasiVertikalActionPerformed(evt);
            }
        });
        jMenu3.add(miTranslasiVertikal);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(miBrightness, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(miFreeRot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Slider_Brightness, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addComponent(slider_rotate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_derajat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_SlideNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Slider_Brightness, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(miBrightness))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_derajat)
                            .addComponent(miFreeRot, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slider_rotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbl_SlideNumber))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class SliderListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            int value = Slider_Brightness.getValue();
            String str = Integer.toString(value);
            lbl_SlideNumber.setText(str);
            gambar.Brightness(Slider_Brightness.getValue());
            jLabel2.setIcon(gambar.ScaleResultIcon);
            
        }     
    }
    
    
    @Override
    public void paint (Graphics g) {
        super.paint(g);
        
    }
    private void miSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSimpanActionPerformed
        JFileChooser TDialog = new JFileChooser();
        if(TDialog.showSaveDialog(null)==JFileChooser.APPROVE_OPTION)
        {
            gambar.SaveImage(TDialog.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_miSimpanActionPerformed

    private void isSliderUse(boolean kondisi) {
        if(kondisi == true){
            
            Slider_Brightness.setVisible(true);
            lbl_SlideNumber.setVisible(true);
        } else {
            
            Slider_Brightness.setVisible(false);
            lbl_SlideNumber.setVisible(false);
        }
    }
    private void miKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKeluarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_miKeluarActionPerformed

    private void miBukaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBukaActionPerformed
        // TODO add your handling code here:
        JFileChooser TDialog=new JFileChooser();
        if(TDialog.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            gambar=new ClassGambar(TDialog.getSelectedFile().getAbsolutePath(), 355, 355);
            jLabel2.setIcon(gambar.GetIcon());
        }
    }//GEN-LAST:event_miBukaActionPerformed

    private void miGrayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGrayscaleActionPerformed
        // TODO add your handling code here:
        gambar.Grayscale();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miGrayscaleActionPerformed

    private void miBinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBinerActionPerformed
        // TODO add your handling code here:
        gambar.Biner();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miBinerActionPerformed

    private void miDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDefaultActionPerformed
        // TODO add your handling code here:
        gambar.Default();
        //jLabel1.setIcon(gambar.ScaleResultIcon);
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miDefaultActionPerformed

    private void miZinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miZinActionPerformed
        // TODO add your handling code here:
        gambar.zoomin();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miZinActionPerformed

    private void miFlipvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFlipvActionPerformed
        // TODO add your handling code here:
        gambar.flipV();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miFlipvActionPerformed

    private void miFliphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFliphActionPerformed
        // TODO add your handling code here:
        gambar.flipH();
        jLabel2.setIcon(gambar.ScaleResultIcon);
        
    }//GEN-LAST:event_miFliphActionPerformed

    private void miZoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miZoutActionPerformed
        // TODO add your handling code here:
        gambar.zoomout();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miZoutActionPerformed

    private void miFreeRotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFreeRotActionPerformed
        // TODO add your handling code here:
        slider_rotate.setEnabled(true);
    }//GEN-LAST:event_miFreeRotActionPerformed

    private void miBrightnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBrightnessActionPerformed
        // TODO add your handling code here:
        isSliderUse(true);
        gambar.Brightness(Slider_Brightness.getValue());
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miBrightnessActionPerformed

    private void mi90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi90ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.rotasiCitra(90, this);
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mi90ActionPerformed

    private void mi180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi180ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.rotasiCitra(180, this);
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mi180ActionPerformed

    private void mi270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi270ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.rotasiCitra(270, this);
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mi270ActionPerformed

    private void miTranslasiHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTranslasiHorizontalActionPerformed
        // TODO add your handling code here:
        gambar.translasiH();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miTranslasiHorizontalActionPerformed

    private void miTranslasiVertikalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTranslasiVertikalActionPerformed
        // TODO add your handling code here:
        gambar.translasiV();
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miTranslasiVertikalActionPerformed

    private void slider_rotateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_rotateStateChanged
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.rotasiCitra((double)slider_rotate.getValue(), this);
        int a = slider_rotate.getValue();
        lbl_derajat.setText(Integer.toString(a));
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_slider_rotateStateChanged

    private void mi30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi30ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.rotasiCitra(30, this);
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mi30ActionPerformed

    private void mi45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi45ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.rotasiCitra(45, this);
        jLabel2.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mi45ActionPerformed
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GambarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GambarForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider Slider_Brightness;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lbl_SlideNumber;
    private javax.swing.JLabel lbl_derajat;
    private javax.swing.JMenuItem mi180;
    private javax.swing.JMenuItem mi270;
    private javax.swing.JMenuItem mi30;
    private javax.swing.JMenuItem mi45;
    private javax.swing.JMenuItem mi90;
    private javax.swing.JMenuItem miBiner;
    private javax.swing.JToggleButton miBrightness;
    private javax.swing.JMenuItem miBuka;
    private javax.swing.JMenuItem miDefault;
    private javax.swing.JMenuItem miFliph;
    private javax.swing.JMenuItem miFlipv;
    private javax.swing.JToggleButton miFreeRot;
    private javax.swing.JMenuItem miGrayscale;
    private javax.swing.JMenuItem miKeluar;
    private javax.swing.JMenuItem miSimpan;
    private javax.swing.JMenuItem miTranslasiHorizontal;
    private javax.swing.JMenuItem miTranslasiVertikal;
    private javax.swing.JMenuItem miZin;
    private javax.swing.JMenuItem miZout;
    private javax.swing.JMenu mnEdit;
    private javax.swing.JMenu mnFile;
    private javax.swing.JSlider slider_rotate;
    // End of variables declaration//GEN-END:variables

    
        
}
